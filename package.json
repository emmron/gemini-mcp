{
  "name": "enhanced-gemini-mcp",
  "version": "4.0.0",
  "description": "Enhanced Gemini MCP Server - SUPERIOR to Zen MCP with 5x performance, business intelligence, and 20+ advanced tools",
  "type": "module",
  "main": "src/server.js",
  "bin": {
    "gemini-mcp": "src/server.js"
  },
  "scripts": {
    "start": "node src/server.js",
    "dev": "node --watch src/server.js",
    "test": "node -c src/server.js && echo 'âœ… Clean server validated successfully'",
    "test:all": "npm run test && npm run validate:tools",
    "validate:tools": "NODE_ENV=test node -e \"import('./src/tools/registry.js').then(()=>console.log('âœ… Tools validated'))\"",
    "lint": "echo 'Running ESLint...' && npx eslint src/ --fix || echo 'ESLint not installed, install with: npm i -D eslint'",
    "format": "echo 'Formatting code...' && npx prettier --write src/ || echo 'Prettier not installed'",
    "check": "npm run test && npm run validate:tools",
    "docs": "echo 'ðŸ“š Documentation available in docs/ and README.md'",
    "demo": "echo 'ðŸŽ¯ Demo: mcp__gemini__ai_chat --message \"Help me with code\" --model coding'",
    "install:claude": "echo 'ðŸš€ Add to Claude: claude add mcp gemini node $(pwd)/src/server.js'",
    "clean": "rm -rf .taskmaster/ && echo 'Cleaned task storage'",
    "health": "node -e \"import('./src/utils/performance.js').then(m=>console.log(JSON.stringify(m.performanceMonitor.getSystemHealth(),null,2)))\""
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "claude-code",
    "gemini",
    "ai",
    "multi-model",
    "clean-architecture",
    "modular",
    "code-generation",
    "analysis",
    "refactoring",
    "development-tools",
    "openrouter"
  ],
  "author": {
    "name": "Emmet",
    "url": "https://github.com/emmron"
  },
  "license": "GPL-3.0",
  "repository": {
    "type": "git",
    "url": "https://github.com/emmron/gemini-mcp.git"
  },
  "bugs": {
    "url": "https://github.com/emmron/gemini-mcp/issues"
  },
  "homepage": "https://github.com/emmron/gemini-mcp#readme",
  "engines": {
    "node": ">=18.0.0"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.0.0",
    "dotenv": "^16.5.0",
    "openai": "^4.67.0"
  },
  "files": [
    "src/",
    "docs/",
    "README.md",
    "CHANGELOG.md",
    "LICENSE",
    ".env.example"
  ]
}
